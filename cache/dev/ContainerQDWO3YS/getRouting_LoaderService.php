<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'routing.loader' shared service.

$a = ($this->services['kernel'] ?? $this->get('kernel'));

$b = new \Symfony\Component\HttpKernel\Config\FileLocator($a, ($this->targetDirs[2].'/Resources'), array(0 => $this->targetDirs[2]));

$c = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader(new \Doctrine\Common\Annotations\CachedReader(($this->privates['annotations.reader'] ?? $this->load(__DIR__.'/getAnnotations_ReaderService.php')), new \Symfony\Component\Cache\DoctrineProvider(\Symfony\Component\Cache\Adapter\PhpArrayAdapter::create(($this->targetDirs[0].'/annotations.php'), ($this->privates['cache.annotations'] ?? $this->load(__DIR__.'/getCache_AnnotationsService.php')))), true));

$d = new \Symfony\Component\Config\Loader\LoaderResolver();
$d->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($b));
$d->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($b));
$d->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($b));
$d->addLoader(new \Symfony\Component\Config\Loader\GlobFileLoader($b));
$d->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($b));
$d->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
$d->addLoader($c);
$d->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($b, $c));
$d->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($b, $c));

return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader(($this->privates['controller_name_converter'] ?? $this->privates['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser($a)), $d);
