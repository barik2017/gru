<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'routing.loader' shared service.

$a = ($this->privates['file_locator'] ?? $this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel')), ($this->targetDirs[3].'/app/Resources'), array(0 => ($this->targetDirs[3].'/app'))));
$b = ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService());

$c = new \Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader($b);

$d = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader($b);

$e = new \Symfony\Component\Config\Loader\LoaderResolver();
$e->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($a));
$e->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($a));
$e->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($a));
$e->addLoader(new \Symfony\Component\Config\Loader\GlobFileLoader($a));
$e->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($a));
$e->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
$e->addLoader($c);
$e->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($a, $c));
$e->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($a, $c));
$e->addLoader($d);
$e->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($a, $d));
$e->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($a, $d));

return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader(($this->privates['controller_name_converter'] ?? $this->privates['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(($this->services['kernel'] ?? $this->get('kernel')))), $e);
